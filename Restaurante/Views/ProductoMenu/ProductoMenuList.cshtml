@model IEnumerable<Data.Models.ViewModels.ProductoMenuListViewModel>
@using Data.Services
@{
    ViewBag.Title = "MenuPorSucursal";
}

    <div class="titleContainer">
        <img src="#" alt="Alternate Text" />
        <h2 id="tituloMenu">Menú</h2>
    </div>

<hr size="30" />
@if (User.IsInRole("Administrador"))
{
    <p>
        @Html.ActionLink("Agregar porducto existente a sucursal", "AgregarProductoSucursal","Producto", new { id = ViewBag.CodigoSucursal } , new { @class = "btn btn-lg btn-block", id = "botonFuncional"})
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Producto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DescripcionProducto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Precio)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.NombreProducto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DescripcionProducto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Precio)
                </td>
                <td>
                    @Html.ActionLink("Modificar producto", "OrdenarProducto", "Orden", new { id = item.CodigoProductoMenu }, new { @class = "btn btn-primary btn-block", id = "botonFuncional" })
                    @Html.ActionLink("Eliminar producto de sucursal", "OrdenarProducto", "Orden", new { id = item.CodigoProductoMenu }, new { @class = "btn btn-primary btn-block", id = "botonFuncional"})
                </td>
            </tr>
        }

    </table>
}

@if (User.IsInRole("Cliente") | User.Identity.IsAuthenticated == false)
{
    <div class="row">
        @foreach (var item in Model)
        {

            <div class="col-sm">
                <div id="productoPanel" class="panel">
                    <div id="productoPanelHeading" class="panel-heading">@Html.DisplayFor(modelItem => item.Producto.NombreProducto)</div>
                    <div id="productoPanelBodyImage" class="panel-body">
                        @{
                            var base64 = Convert.ToBase64String(item.ImagenPrincipal);
                            var imgSource = String.Format("data:image/gif;base64,{0}", base64);
                        }
                        <img id="productoListImage" class="img-responsive" src="@imgSource" alt="Imagen de producto" />
                    </div>
                    <div id="productoPanelBody" class="panel-body">
                        <p>@Html.LabelFor(model => item.DescripcionProducto, htmlAttributes: new { @class = "label-producto" }) @Html.DisplayFor(modelItem => item.DescripcionProducto)</p>
                        <p>@Html.LabelFor(model => item.Precio, htmlAttributes: new { @class = "label-producto" }) @Html.DisplayFor(modelItem => item.Precio)</p>
                    </div>
                    <div id="productoPanelFooter" class="panel-footer">
                        @Html.ActionLink("Ordenar", "OrdenarProducto", "Orden", new { idProducto = item.CodigoProducto, idSucursal = GetService.GetMenuService().FindById(GetService.GetProductoMenuService().FindById(item.CodigoProductoMenu).CodigoMenu).CodigoSucursal }, new { @class = "btn btn-primary btn-block", id = "btnOrdenarProducto" })
                    </div>
                </div>
            </div>
        }
    </div>
}
